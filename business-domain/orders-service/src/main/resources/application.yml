server:
  port: 0

spring:
  application:
    name: orders-service

  datasource:
    url: jdbc:mysql://localhost:3307/db_orders_service
    username: magadiflo
    password: magadiflo

  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true

  # Keycloak
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: http://localhost:8181/realms/microservices-realm/protocol/openid-connect/certs

  # Kafka
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      retries: 1
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

logging:
  pattern:
    level: '%5p [${spring.application.name}, %X{traceId:-}, %X{spanId:-}]'
  level:
    root: debug
    org.hibernate.SQL: debug

# Eureka client
eureka:
  instance:
    hostname: localhost
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}

  client:
    service-url:
      defaultZone: http://eureka:password@localhost:8761/eureka/

# Actuator
management:
  endpoints:
    web:
      exposure:
        include: health,prometheus
      base-path: /actuator/orders
  endpoint:
    health:
      show-details: always
  health:
    circuitbreakers:
      enabled: true
  # Tracing
  tracing:
    sampling:
      probability: 1.0
  zipkin:
    tracing:
      endpoint: http://localhost:9411/api/v2/spans

# Resilience4j - Circuit Breaker
resilience4j.circuitbreaker:
  instances:
    orders-service:
      register-health-indicator: true
      sliding-window-size: 5
      sliding-window-type: count_based
      failure-rate-threshold: 50
      wait-duration-in-open-state: 10s
      automatic-transition-from-open-to-half-open-enabled: true
      permitted-number-of-calls-in-half-open-state: 3